{"version":3,"sources":["assets/logo.svg","assets/github-background.svg","styles/global.ts","services/api.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","githubBackground","api","axios","create","baseURL","Title","styled","h1","Form","form","props","hasError","css","shade","Error","span","Repositories","div","Button","button","Dashboard","useState","newRepo","setNewRepo","inputError","setInputError","storagedRepositories","localStorage","getItem","JSON","parse","repositories","setRepositories","event","a","preventDefault","filter","e","full_name","length","get","response","repository","data","window","scrollTo","top","document","body","scrollHeight","behavior","useEffect","setItem","stringify","src","logoImg","alt","onSubmit","type","value","onChange","target","placeholder","map","id","key","to","owner","avatar_url","login","description","size","onClick","repoFullName","index","findIndex","i","handleDeleteRepository","Header","header","RepositoryInfo","section","Issues","Repository","setRepository","issues","setIssues","params","useRouteMatch","then","stargazers_count","forks_count","open_issues_count","issue","href","html_url","title","user","Routes","path","exact","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c1cb5134.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-background.0b819d63.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport githubBackground from '../assets/github-background.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #f0f0f5 url(${githubBackground}) no-repeat 70% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #3a3a3a;\n  max-width: 450px;\n  line-height: 56px;\n\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 700px;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 0;\n    border-radius: 5px 0 0 5px;\n    color: #3a3a3a;\n    border: 2px solid #fff;\n    border-right: 0;\n\n    ${(props) =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n      `}\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n\n  button {\n    width: 210px;\n    height: 70px;\n    background: #04d361;\n    border-radius: 0 5px 5px 0;\n    border: 0;\n    color: #fff;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#04d361')};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n  margin-top: 5px;\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n\n  div#repository-container {\n    position: relative;\n\n    transition: transform 0.2s;\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + div {\n      margin-top: 16px;\n    }\n\n    a {\n      background: #fff;\n      border-radius: 5px;\n      width: 100%;\n      padding: 24px;\n      display: block;\n      text-decoration: none;\n\n      display: flex;\n      align-items: center;\n\n      img {\n        width: 64px;\n        height: 64px;\n        border-radius: 50%;\n      }\n\n      div {\n        margin: 0 16px;\n        flex: 1;\n\n        strong {\n          font-size: 20px;\n          color: #3d3d4d;\n        }\n\n        p {\n          font-size: 18px;\n          color: #a8a8b3;\n          margin-top: 4px;\n        }\n      }\n\n      svg {\n        margin-left: auto;\n        color: #cbcbd6;\n      }\n    }\n\n    button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      position: absolute;\n\n      color: #fff;\n      width: 20px;\n      height: 20px;\n      border: 0;\n      border-radius: 50%;\n      background-color: #c53030;\n      z-index: 2;\n\n      top: -10px;\n      right: -10px;\n      font-size: 12px;\n      transition: background-color 0.2s;\n\n      &:hover {\n        background-color: ${shade(0.4, '#c53030')};\n      }\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 300px;\n\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  border: 0;\n  background-color: #cbcbd6;\n\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${shade(0.1, '#cbcbd6')};\n    transform: translateY(-10px);\n  }\n\n  svg {\n    color: #3d3d4d;\n  }\n`;\n","import React, { useState, useEffect, FormEvent } from 'react';\nimport { FiChevronRight, FiChevronUp } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Title, Form, Repositories, Error, Button } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storagedRepositories = localStorage.getItem(\n      '@GithubExplorer:repositories',\n    );\n\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositório');\n      return;\n    }\n\n    const repoExists = repositories.filter((e) => e.full_name === newRepo);\n\n    if (repoExists.length) {\n      setInputError('Repositório já adicionado');\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository>(`repos/${newRepo}`);\n\n      const repository = response.data;\n\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n\n      window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });\n    } catch (error) {\n      setInputError('Erro na busca por esse repositório');\n    }\n  }\n\n  function handleDeleteRepository(repoFullName: string): void {\n    const index = repositories.findIndex((e) => e.full_name === repoFullName);\n\n    setRepositories([...repositories.filter((e, i) => i !== index)]);\n  }\n\n  function handleScrollToTop(): void {\n    window.scrollTo({ top: -document.body.scrollHeight, behavior: 'smooth' });\n  }\n\n  return (\n    <>\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Title>Explore repositórios no Github.</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          type=\"text\"\n          value={newRepo}\n          onChange={(e) => setNewRepo(e.target.value)}\n          placeholder=\"Digite o nome do repositório\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <div id=\"repository-container\" key={repository.full_name}>\n            <Link to={`/repository/${repository.full_name}`}>\n              <img\n                src={repository.owner.avatar_url}\n                alt={repository.owner.login}\n              />\n              <div>\n                <strong>{repository.full_name}</strong>\n                <p>{repository.description}</p>\n              </div>\n\n              <FiChevronRight size={20} />\n            </Link>\n\n            <button\n              onClick={() => handleDeleteRepository(repository.full_name)}\n              type=\"button\"\n            >\n              X\n            </button>\n          </div>\n        ))}\n      </Repositories>\n\n      <Button type=\"button\" onClick={handleScrollToTop}>\n        <FiChevronUp size={24} />\n      </Button>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  a {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    color: #a8a8b3;\n    transition: color 0.2s;\n\n    &:hover {\n      color: #666;\n    }\n\n    svg {\n      margin-right: 4px;\n    }\n  }\n`;\n\nexport const RepositoryInfo = styled.section`\n  margin-top: 80px;\n\n  header {\n    display: flex;\n    align-items: center;\n\n    img {\n      width: 120px;\n      height: 120px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 24px;\n\n      strong {\n        font-size: 36px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #737380;\n        margin-top: 4px;\n      }\n    }\n  }\n\n  ul {\n    display: flex;\n    list-style: none;\n    margin-top: 40px;\n\n    li {\n      & + li {\n        margin-left: 80px;\n      }\n\n      strong {\n        display: block;\n        font-size: 36px;\n        color: #3d3d4d;\n      }\n\n      span {\n        display: block;\n        margin-top: 6px;\n        color: #6c6c80;\n      }\n    }\n  }\n`;\n\nexport const Issues = styled.div`\n  margin-top: 80px;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 100px;\n\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  border: 0;\n  background-color: #cbcbd6;\n\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${shade(0.1, '#cbcbd6')};\n    transform: translateY(-10px);\n  }\n\n  svg {\n    color: #3d3d4d;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight, FiChevronUp } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport { Header, RepositoryInfo, Issues, Button } from './styles';\n\nimport logoImg from '../../assets/logo.svg';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface Issue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n\nconst Repository: React.FC = () => {\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then((response) => {\n      setRepository(response.data);\n    });\n\n    api.get(`repos/${params.repository}/issues`).then((response) => {\n      setIssues(response.data);\n    });\n\n    // async function loadData(): Promise<void> {\n    //   const [repository, issues] = await Promise.all([\n    //     api.get(`repos/${params.repository}`),\n    //     api.get(`repos/${params.repository}/issues`),\n    //   ]);\n    // }\n  }, [params.repository]);\n\n  function handleScrollToTop(): void {\n    window.scrollTo({ top: -document.body.scrollHeight, behavior: 'smooth' });\n  }\n\n  return (\n    <>\n      <Header>\n        <img src={logoImg} alt=\"Github Explorer\" />\n        <Link to=\"/\">\n          <FiChevronLeft size={16} />\n          Voltar\n        </Link>\n      </Header>\n\n      {repository && (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n          <ul>\n            <li>\n              <strong>{repository.stargazers_count}</strong>\n              <span>Stars</span>\n            </li>\n            <li>\n              <strong>{repository.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{repository.open_issues_count}</strong>\n              <span>Issues abertas</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n\n      <Issues>\n        {issues.map((issue) => (\n          <a key={issue.id} href={issue.html_url} target=\"__blank\">\n            <div>\n              <strong>{issue.title}</strong>\n              <p>{issue.user.login}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Issues>\n\n      <Button type=\"button\" onClick={handleScrollToTop}>\n        <FiChevronUp size={24} />\n      </Button>\n    </>\n  );\n};\n\nexport default Repository;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\nimport Repository from '../pages/Repository';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Dashboard} />\n    <Route path=\"/repository/:repository+\" component={Repository} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}